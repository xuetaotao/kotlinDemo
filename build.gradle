// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'config.gradle'
apply from: 'test.gradle'

//buildscript里的repositories是gradle脚本执行所需依赖,分别是对应的maven库和插件
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
    dependencies {
//        classpath "com.android.tools.build:gradle:4.0.0"//Android Gradle 插件版本，与Gradle版本对应关系：https://developer.android.google.cn/studio/releases/gradle-plugin.html#updating-plugin
        classpath "com.android.tools.build:gradle:3.5.1"//tinker热更新使用，不要乱升暂时
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.tinker:tinker-patch-gradle-plugin:1.9.14.7'//Tinker组件依赖
        classpath "com.tencent.bugly:tinker-support:1.2.0"//第一步：添加插件依赖 tinker-support插件

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//allprojects里的repositories是项目本身需要的依赖
allprojects {
    repositories {
        //JL自定义组件库
        maven {
            url 'http://sharesdk.jlpay.com/repository/android-private/'       //生产
            credentials {
                username = 'public'
                password = 'P1ic223zk'
            }
        }
        maven {
            url 'http://sharesdk.jlpay.com/repository/android-private-snapshot/'       //测试
            credentials {
                username = 'report'
                password = 'R86c12893x'
            }
        }

        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/public/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://jitpack.io' }
        google()
        jcenter()
    }
}

task cleanProject(type: Delete) {
    delete rootProject.buildDir
}